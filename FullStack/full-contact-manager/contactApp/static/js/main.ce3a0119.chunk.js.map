{"version":3,"sources":["Components/EditContact.js","Components/addContact/AddContact.js","Components/contactDetails/ContactDetails.js","Components/contactCard/ContactCard.js","Components/contactList/ContactList.js","Components/header/Header.js","App.js","index.js"],"names":["EditContact","props","id","useParams","emailI","setEmailI","useState","nameI","setNameI","phoneI","setPhoneI","useEffect","JSON","parse","localStorage","getItem","forEach","element","email","name","phone","_jsxs","Fragment","children","className","_jsx","onSubmit","event","preventDefault","updateContact","type","value","onChange","e","target","NavLink","to","style","textDecoration","padding","backgroundColor","border","marginLeft","AddContact","setName","setEmail","setPhone","console","log","addContact","alert","placeholder","ContactDetails","setemail","setname","setphone","ID","setID","display","justifyContent","marginTop","pathname","concat","state","oldDetails","ContactCard","data","Link","contactDetails","color","fontWeight","wordSpacing","letterSpacing","onClick","clickDeleteContact","ContactList","deleteContect","getContactID","contactList","length","map","item","Header","params","boxShadow","App","LOCAL_STORAGE_KEY","contact","setContact","contactsRetrieved","setItem","stringify","homepage","BrowserRouter","basename","Routes","Route","path","newContact","filter","con","uuid","exact","cont","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ce3a0119.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\n\r\nexport default function EditContact(props) {\r\n    let { id } = useParams();\r\n    const [emailI, setEmailI] = useState();\r\n    const [nameI, setNameI] = useState();\r\n    const [phoneI, setPhoneI] = useState();\r\n    useEffect(() => {\r\n        let contactsStorage = JSON.parse(localStorage.getItem(\"contacts\"))\r\n        contactsStorage.forEach(element => {\r\n            if (element.id === id) {\r\n                setEmailI(element.email);\r\n                setNameI(element.name);\r\n                setPhoneI(element.phone);\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    let submitting = (event) => {\r\n        event.preventDefault();\r\n        props.updateContact(id, emailI, nameI, phoneI);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"fulDetails\">\r\n                <br />ID: {id}\r\n            </div>\r\n            <div>\r\n                <form onSubmit={submitting} className={\"center \"}>\r\n                    <h1>Edit</h1>\r\n                    <div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" value={nameI} onChange={(e) => setNameI(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" value={emailI} onChange={(e) => setEmailI(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" value={phoneI} onChange={(e) => setPhoneI(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"submit\" value=\"SAVE\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <hr />\r\n            <NavLink to='/' style={{ textDecoration: 'none' }}>\r\n                <button style={{\r\n                    padding: '5px 10px', backgroundColor: 'skyblue',\r\n                    border: '1px solid black', marginLeft: '20px'\r\n                }}>Back to Contact List</button>\r\n            </NavLink>\r\n        </Fragment>\r\n    )\r\n\r\n}","import React, { Fragment, useState } from 'react'\r\nimport './addContact.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function AddContact(props) {\r\n    // States to handle data\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        if (name === \"\" || phone === \"\") {\r\n            alert('Must fill Name and Phone number')\r\n            return;\r\n        }\r\n        console.log('Name: ', name, ' Email: ', email, ' Phone: ', phone,);\r\n        props.addContact(name, email, phone);\r\n        setName('')\r\n        setEmail('')\r\n        setPhone('')\r\n        alert(\"Added successfully!\")\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"left addContact\">\r\n                <h2>Add Contact</h2>\r\n                <form className=\"\" onSubmit={submitForm}>\r\n                    <div>\r\n                        <label>Name:</label>\r\n                        <input type=\"text\" placeholder=\"Enter full-name\" value={name} onChange={e => setName(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Email:</label>\r\n                        <input type=\"text\" placeholder=\"Email address\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Phone:</label>\r\n                        <input type=\"text\" placeholder=\"Phone number\" value={phone} onChange={e => setPhone(e.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <input type='submit' value='Add contact' />\r\n                    </div>\r\n                </form>\r\n                <hr />\r\n                <NavLink to='/' style={{ textDecoration: 'none' }}>\r\n                    <button style={{\r\n                        padding: '5px 10px', backgroundColor: 'skyblue',\r\n                        border: '1px solid black', marginLeft: '20px'\r\n                    }}>Back to Contact List</button>\r\n                </NavLink>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\n\r\nfunction ContactDetails() {\r\n    const { id } = useParams();\r\n    const [email, setemail] = useState(\"\");\r\n    const [name, setname] = useState(\"\");\r\n    const [phone, setphone] = useState(\"\");\r\n    const [ID, setID] = useState(id);\r\n\r\n    useEffect(() => {\r\n        let contactsStorage = JSON.parse(localStorage.getItem(\"contacts\"))\r\n        contactsStorage.forEach(element => {\r\n            if (element.id === id) {\r\n                setemail(element.email);\r\n                setname(element.name);\r\n                setphone(element.phone);\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"fulDetails\" >\r\n            <div>\r\n                id: {id} <br />\r\n                name: {name}<br />\r\n                phone: {phone}<br />\r\n                email: {email}\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', marginTop: '10px' }}>\r\n                <NavLink to='/' style={{ textDecoration: 'none' }}>\r\n                    <button style={{\r\n                        padding: '5px 10px', backgroundColor: 'skyblue',\r\n                        border: '1px solid black', marginLeft: '20px'\r\n                    }}>Back to Contact List</button>\r\n                </NavLink>\r\n                <NavLink\r\n                    to={{ pathname: `/edit/${ID}`, state: { oldDetails: { id, name, phone, email } } }} >\r\n                    <button style={{\r\n                        padding: '5px 10px', backgroundColor: 'skyblue',\r\n                        border: '1px solid black', marginLeft: '60px'\r\n                    }}><i className=\"far fa-edit\"></i>Edit</button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ContactDetails","import { Link } from \"react-router-dom\";\r\n\r\nfunction ContactCard(props) {\r\n    console.log(props);\r\n    const { email, id, name, phone } = props.data;\r\n    return (\r\n        <div className=\"eachContact\">\r\n            <Link\r\n                /* This state attribute add the data for the custom link as state.contactDetails */\r\n                to={{ pathname: `/contactDetails/${id}`, state: { contactDetails: props.data } }}\r\n                style={{ textDecoration: 'none', color: 'black', fontWeight: '600', wordSpacing: '6px', letterSpacing: '0.7px' }}>\r\n                Name: {name}<br />\r\n                Eamil: {email}<br />\r\n                Phone number: {phone}\r\n            </Link>\r\n            <div className=\"deleteIcon\">\r\n                <i className=\"far fa-trash-alt fa-2x\" onClick={() => props.clickDeleteContact(id)}></i>\r\n            </div>\r\n            <hr />\r\n        </div >\r\n    );\r\n}\r\nexport default ContactCard","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ContactCard from '../contactCard/ContactCard';\r\nimport './contactList.css';\r\n\r\n\r\nexport default function ContactList(props) {\r\n    // console.log(props);\r\n\r\n    const deleteContect = (id) => {\r\n        props.getContactID(id);\r\n    }\r\n    const contactList = props.contactList.length < 1 ? <h1>Nothing here</h1> : props.contactList.map(item => {\r\n        return (\r\n            <ContactCard data={item} key={item.id} clickDeleteContact={deleteContect} />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"contactList\">\r\n            <NavLink to='/add' style={{ textDecoration: 'none' }}>\r\n                <button style={{\r\n                    padding: '5px 10px', backgroundColor: 'skyblue',\r\n                    border: '1px solid black', display: 'block', marginLeft: '40%'\r\n                }}>Add Contact</button>\r\n            </NavLink>\r\n            {contactList}\r\n        </div>\r\n    );\r\n}","import React, { Fragment } from 'react'\r\n\r\nexport default function Header(params) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"center\">\r\n                <h1>Contact manager</h1>\r\n                <hr style={{ boxShadow: \"#cfcece 0px 0px 1px\" }} />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport { uuid } from 'uuidv4';\r\n// import { uuid } from 'v4';\r\nimport './App.css';\r\nimport EditContact from './Components/EditContact';\r\nimport AddContact from './Components/addContact/AddContact';\r\nimport ContactDetails from './Components/contactDetails/ContactDetails';\r\nimport ContactList from './Components/contactList/ContactList';\r\nimport Header from './Components/header/Header';\r\nimport homepage from '../package.json'\r\n/*\r\nUsed Local storage to store contacts.\r\nnot stored in any api/database/file\r\n*/\r\nexport default function App() {\r\n  const LOCAL_STORAGE_KEY = \"contacts\";\r\n  const [contact, setContact] = useState([]);\r\n\r\n  const addContact = (name, email, phone) => {\r\n    // console.log('appjs', name, email, phone);\r\n    let con = { name, email, phone };\r\n    setContact([...contact, { id: uuid(), ...con }]);\r\n  };\r\n\r\n  let updateContact = (ID, emailI, nameI, phoneI) => {\r\n    // let newData = { ID, nameI, emailI, phoneI };\r\n    // console.log(newData);\r\n    let cont = contact.map(item => {\r\n      if (item.id === ID) {\r\n        item.name = nameI;\r\n        item.email = emailI;\r\n        item.phone = phoneI;\r\n      }\r\n      alert(\"Updated\");\r\n      return item;\r\n    });\r\n    setContact(cont);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const contactsRetrieved = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n    if (contactsRetrieved)\r\n      setContact(contactsRetrieved)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contact))\r\n  }, [contact])\r\n\r\n  //To remove a specific contact\r\n  const removeContact = (id) => {\r\n    const newContact = contact.filter((contact) => { return contact.id !== id });\r\n    setContact(newContact);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* \\\\ BrouserRouter(as Route): what to route? \r\n          \\\\ Router > ( Link*X(or anywhere) + Switch*1>(Route[path='/abc']*X) ) Links can be added to any page anywhere*/}\r\n      {console.log(homepage.homepage)}\r\n      <BrowserRouter basename={homepage.homepage}>\r\n        <Header />\r\n        {/* This Route approach is slow as it used ananomous function which execute on every click */}\r\n        <Routes>\r\n          <Route path=\"/\" element={<ContactList contactList={contact} getContactID={removeContact} />} />\r\n          <Route path=\"/add\" element={<AddContact addContact={addContact} />} />\r\n          <Route path=\"/contactDetails/:id\" element={<ContactDetails />} />\r\n          <Route path=\"/edit/:id/\" exact element={<EditContact updateContact={updateContact} />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n      {/* <AddContact addContact={addContact} /> */}\r\n      {/* <ContactList contactList={contact} getContactID={removeContact} /> */}\r\n    </div>\r\n  );\r\n}\r\n/*\r\nUsing Route tag\r\n        1). <Route path=\"/\" exact element={ContactList} />//when we don't have any props to pass in Component\r\n        2). <Route path=\"/\" exact element={\r\n            ()=><ContactList contactList={contact} getContactID={removeContact} />\r\n          } />//When we have props to pass in Component\r\n        3). <Route\r\n            path=\"/\" exact\r\n            render={(props) => (\r\n              <ContactList\r\n                {...props}\r\n                contactList={contact}\r\n                getContactID={removeContact} />\r\n            )}\r\n          />//With this way we can have some more features like props will have 20-25+ more features/functions to access.\r\n\r\n\r\n*/","import React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n// import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Fragment>\r\n    <App />\r\n  </Fragment>\r\n);"],"sourceRoot":""}